 ###STARTLIST###
[
  {
    "testname": "VPN IKE Phase 1 Configuration",
    "testcase": {
      "testname": "VPN IKE Phase 1 Configuration", 
      "objective": "Verify IKE Phase 1 VPN configuration on MX480 device",
      "steps": [
        "Configure IKE proposal", 
        "Bind IKE policy and proposal to vpn interface",
        "Verify IKE policy and proposal are applied"
      ],
      "test_data": {
        "ike_proposal_name": "ike_prop_1",
        "ike_policy_name": "ike_policy_1", 
        "vpn_interface": "ge-0/0/1"
      }
    },
    "testscript": {
      "testname": "VPN IKE Phase 1 Configuration",
      "objective": "Automate IKE Phase 1 VPN configuration test",
      "file_name": "test_vpn_ike_phase1.py",
      "init_scripts": [
        "pip install jnpr.junos",
        "pip install paramiko"
      ],
      "script": """
        import jnpr.junos
        from jnpr.junos import Device
        
        def test_ike_phase1_config(ike_proposal, ike_policy, interface):
          dev = Device(host='192.168.1.1', user='netconf', password='juniper!')
          dev.open()
          
          ike_proposal_cfg = dev.rpc.request_security_ike_proposal_set_information(ike_proposal_name=ike_proposal)
          print('Configured IKE proposal ' + ike_proposal)
          
          ike_policy_cfg = dev.rpc.request_security_ike_policy_set_information(
            ike_policy_name=ike_policy, 
            ike_proposal_name=ike_proposal)
          print('Configured IKE policy ' + ike_policy)
          
          interface_cfg = dev.rpc.request_security_ike_gateway_set_interface_peer(interface, 
            ike_policy=ike_policy)
          print('Bound IKE policy ' + ike_policy + ' to interface ' + interface)
          
          dev.close()
        
        test_ike_phase1_config(**DATA)
      """,
      "run_command": "python test_vpn_ike_phase1.py", 
      "expected_result": "IKE proposal, policy and interface binding configured successfully"
    }
  },
  
  {
    "testname": "VPN IKE Phase 2 Configuration", 
    "testcase": {
      "testname": "VPN IKE Phase 2 Configuration",
      "objective": "Verify IKE Phase 2 VPN configuration on MX480 device", 
      "steps": [
        "Configure IKE proposal",
        "Configure IPsec proposal", 
        "Bind IKE and IPsec proposals to vpn policy", 
        "Bind vpn policy to vpn interface" 
      ],
      "test_data": {
        "ike_proposal": "ike_prop_2",
        "ipsec_proposal": "ipsec_prop_1",
        "vpn_policy": "vpn_policy_1",
        "vpn_interface": "ge-0/0/2"  
      }
    },
    "testscript": {
      "testname": "VPN IKE Phase 2 Configuration",
      "objective": "Automate IKE Phase 2 VPN configuration test", 
      "file_name": "test_vpn_ike_phase2.py",
      "init_scripts": [
        "pip install jnpr.junos",
        "pip install paramiko"
      ],
      "script": """  
        import jnpr.junos
        from jnpr.junos import Device
        
        def test_ike_phase2_config(ike_proposal, ipsec_proposal, vpn_policy, interface):
          dev = Device(host='192.168.1.1', user='netconf', password='juniper!')
          dev.open()
        
          ike_proposal_cfg = dev.rpc.request_security_ike_proposal_set_information(ike_proposal_name=ike_proposal)
          print('Configured IKE proposal ' + ike_proposal)
        
          ipsec_proposal_cfg = dev.rpc.request_security_ipsec_proposal_set_information(ipsec_proposal_name=ipsec_proposal)
          print('Configured IPsec proposal ' + ipsec_proposal)
        
          vpn_policy_cfg = dev.rpc.request_security_ipsec_vpn_config(vpn_policy_name=vpn_policy, 
            ike_gateway=ike_proposal, 
            ipsec_proposal=ipsec_proposal)
          print('Configured VPN policy ' + vpn_policy)
        
          interface_cfg = dev.rpc.request_security_ipsec_vpn_bind_interface(interface, 
            vpn_policy=vpn_policy)
          print('Bound VPN policy ' + vpn_policy + ' to interface ' + interface)
        
          dev.close()
        
        test_ike_phase2_config(**DATA)
      """,
      "run_command": "python test_vpn_ike_phase2.py",
      "expected_result": "IKE, IPsec proposals and VPN policy bound to interface successfully"
    }
  } 
]
###ENDLIST###