 ###STARTLIST###
[
  {
    "testname": "Traffic Policing Test", 
    "testcase": {
      "testname": "Traffic Policing Test",
      "objective": "Verify traffic policing is working properly with configured policers",
      "steps": [
        "Configure a policer to limit traffic to 100 kbps", 
        "Send traffic at 150 kbps and verify traffic is policed down to 100 kbps"
      ],
      "test_data": {
        "policer_bandwidth": "100kbps"
      }
    },
    "testscript": {
      "testname": "Traffic Policing Test",
      "objective": "Verify traffic policing is working properly with configured policers",
      "file_name": "traffic_policing_test.py",
      "init_scripts": [
        "pip install paramiko",
        "pip install junos-eznc" 
      ],
      "script": """
import json
import logging
from jnpr.junos import Device
from jnpr.junos.utils.config import Config

# Set up logging
log = logging.getLogger(__name__)
log.setLevel(logging.DEBUG)

# Initialize device connection
dev = Device(host='192.168.1.1', user='netconf', password='password123')
dev.open()

# Configure policer
cu = Config(dev)
cu.load('set firewall policer TEST_POLICER if-exceeding bandwidth-limit {test_data[policer_bandwidth]}', format='set')
cu.commit()

# Send test traffic
# Code to generate and send traffic at 150kbps

# Verify policed traffic rate 
# Code to verify policed traffic rate is 100kbps

# Cleanup policer config
cu.load('delete firewall policer TEST_POLICER', format='set')
cu.commit()

# Close device connection
dev.close()
""",
      "run_command": "python traffic_policing_test.py",
      "expected_result": "Test traffic successfully policed down to configured policer limit"
    }
  } 
]
###ENDLIST###