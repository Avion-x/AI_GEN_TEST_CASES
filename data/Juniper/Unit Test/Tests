 ###STARTLIST###
[
  {
    "testname": "Route Leaking Verification Test", 
    "testcase": {
      "testname": "Route Leaking Verification Test",
      "objective": "Verify route leaking between Routing Instances on Juniper EX4300",
      "steps": [
        "Configure two Routing Instances on the Juniper device",
        "Redistribute routes between the Routing Instances", 
        "Verify routes from Routing Instance A show up in Routing Instance B routing table"
      ],
      "test_data": {
        "routing_instance_a": "cust1",
        "routing_instance_b": "cust2",
        "redistribution_policy": "redist_cust1_to_cust2" 
      }
    },
    "testscript": {
      "testname": "Route Leaking Verification Test",
      "objective": "Automate Route Leaking Verification Test",
      "file_name": "route_leak_verification.py",
      "init_scripts": [
        "pip install junos-eznc",
        "pip install jsnapy"
      ],
      "script": """
        import logging
        from junos import Junos_Context
        from jsnapy import SnapAdmin
        
        # Initialize device connection
        dev = Device(host='10.10.10.1', user='netconf', password='pwd123')
        dev.open()
        
        # Configure Routing Instances
        dev.cu.load(template_path="cust1_routing_instance.conf")
        dev.cu.load(template_path="cust2_routing_instance.conf")
        dev.cu.commit()
        
        # Configure route redistribution policy
        dev.cu.load(template_path="redist_cust1_to_cust2.conf")
        dev.cu.commit()
        
        # Verify leaked routes
        test = SnapAdmin()
        test.snap(dev, "verify_route_leak")
        test.run_test(dev, "verify_route_leak")
        """,
      "run_command": "python route_leak_verification.py",
      "expected_result": "No failures in test verification"
    }
  }
]
###ENDLIST###