 Here are 2 unit test cases with test scripts for Interface configuration on Juniper MX480:

###STARTLIST###
[
  {
    "testname": "Test Ethernet Interface Configuration",
    "testcase": {
      "testname": "Test Ethernet Interface Configuration",
      "objective": "Validate Ethernet interface configuration using NETCONF",  
      "steps": [
        "Validate interface is configured with expected IP address", 
        "Validate interface description is configured",
        "Validate interface is operationally up"
      ],
      "test_data": {
        "interface_name": "ge-0/0/0",
        "ip_address": "10.0.0.1/24", 
        "description": "Uplink to ISP"
      }
    },
    "testscript": {
      "testname": "Test Ethernet Interface Configuration",
      "objective": "Validate Ethernet interface configuration using NETCONF",
      "file_name": "test_ethernet_interface.py",
      "init_scripts": [
        "pip install ncclient",
        "pip install xmltodict"
      ],
      "script": """
        from ncclient import manager
        import xmltodict
        
        HOST = "10.10.10.1"
        PORT = 830
        USER = "netconfuser"
        PASS = "netconf123"
        
        interface_filter = \"\"\"
          <interfaces>
            <interface>
              <name>ge-0/0/0</name>
            </interface>
          </interfaces>
        \"\"\"
        
        with manager.connect(host=HOST, port=PORT, username=USER, password=PASS, hostkey_verify=False) as m:
        
          netconf_reply = m.get(interface_filter)
          interface_config = xmltodict.parse(netconf_reply.xml)["rpc-reply"]["data"]
          
          ip_address = interface_config["interfaces"]["interface"][0]["unit"][0]["family"][0]["inet"][0]["address"][0]["name"]
          description = interface_config["interfaces"]["interface"][0]["description"]
          oper_status = interface_config["interfaces"]["interface"][0]["oper-status"]
          
          assert ip_address == "10.0.0.1/24"
          assert description == "Uplink to ISP" 
          assert oper_status == "up"
      """,
      "run_command": "python test_ethernet_interface.py",
      "expected_result": "All assertions should pass"
    }
  },
  
  {
    "testname": "Test VLAN Configuration", 
    "testcase": {
      "testname": "Test VLAN Configuration",
      "objective": "Validate VLAN interface configuration using NETCONF",
      "steps": [ 
        "Validate vlan interface exists in configuration",
        "Validate vlan interface IP address" 
      ],
      "test_data": {
        "vlan_interface": "vlan.100",
        "ip_address": "192.168.100.1/24"  
      }
    },
    "testscript": {    
      "testname": "Test VLAN Configuration",
      "objective": "Validate VLAN interface configuration using NETCONF", 
      "file_name": "test_vlan_interface.py",
      "init_scripts": [ 
        "pip install ncclient",
        "pip install xmltodict"
      ],
      "script": """ 
        from ncclient import manager  
        import xmltodict
        
        HOST = "10.10.10.1"
        PORT = 830 
        USER = "netconfuser"
        PASS = "netconf123"
        
        vlan_filter = \"\"\"
          <interfaces>
            <interface>
              <name>vlan.100</name> 
            </interface>
          </interfaces>  
        \"\"\"
        
        with manager.connect(host=HOST, port=PORT, username=USER, 
                            password=PASS, hostkey_verify=False) as m:
                            
          netconf_reply = m.get(vlan_filter)
          interface_config = xmltodict.parse(netconf_reply.xml)["rpc-reply"]["data"]
          
          assert interface_config["interfaces"]["interface"]  
          assert interface_config["interfaces"]["interface"][0]["unit"][0]["family"][0]["inet"][0]["address"][0]["name"] == "192.168.100.1/24"
      """,
      "run_command": "python test_vlan_interface.py", 
      "expected_result": "All assertions should pass"
    }
  } 
]
###ENDLIST###