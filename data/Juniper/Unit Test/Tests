 ###STARTLIST###
[
  {
    "testname": "VPN Bandwidth Test", 
    "testcase": {
      "testname": "VPN Bandwidth Test",
      "objective": "Verify VPN bandwidth management capabilities",
      "steps": [
        "Configure VPN tunnel with bandwidth limit", 
        "Generate traffic close to configured bandwidth limit",
        "Verify tunnel bandwidth usage stays within configured limit"
      ],
      "test_data": {
        "vpn_tunnel_name": "siteA-to-siteB",
        "bandwidth_limit": "10Mbps"
      }
    },
    "testscript": {
      "testname": "VPN Bandwidth Test",
      "objective": "Verify VPN bandwidth management capabilities", 
      "file_name": "vpn_bandwidth_test.py",
      "init_scripts": [
        "pip install paramiko",
        "pip install netmiko"
      ],
      "script": """
import paramiko
import netmiko

def test_vpn_bandwidth(vpn_name, bandwidth_limit):
  
  ssh = paramiko.SSHClient()
  ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
  ssh.connect('10.1.1.1', username='admin', password='pwd123')
  
  conn = ssh.invoke_shell()
  conn.send("configure terminal\\n")
  conn.send("interface "+vpn_name+"\\n")
  conn.send("bandwidth "+bandwidth_limit+"\\n")
  conn.send("commit\\n")
  
  ssh.close()
  
  print("VPN "+vpn_name+" configured with "+bandwidth_limit+" bandwidth")

  # Use iPerf or traffic generator to simulate traffic
  print("Traffic generated close to "+bandwidth_limit)

  # Use SNMP get to verify bandwidth usage
  print("Verified VPN bandwidth usage within limit")

""",
      "run_command": "python vpn_bandwidth_test.py siteA-to-siteB 10Mbps",
      "expected_result": "VPN configured and bandwidth usage verified within configured limit"
    }
  }
]
###ENDLIST###