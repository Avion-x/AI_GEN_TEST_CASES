 Here are 5 unit test cases with Python test scripts for MX240 Bootup process:

###STARTLIST###
[
{
  "testname": "Test Bootup Message",
  "testcase": {
    "testname": "Test Bootup Message", 
    "objective": "Verify the MX240 displays the correct bootup message",
    "steps": [
      "Device displays 'Booting kernel' during startup",
      "Device displays Junos version number during startup"
    ]
  },
  "testscript": {
    "testname": "Test Bootup Message",
    "objective": "Verify the MX240 displays the correct bootup message", 
    "file_name": "test_bootup_message.py",
    "init_scripts": [
      "pip install paramiko"
    ],
    "script": """
import paramiko
import re

ip = '192.168.1.1'
username = 'admin'
password = 'juniper123'

ssh = paramiko.SSHClient()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
ssh.connect(ip, username=username, password=password)

stdin, stdout, stderr = ssh.exec_command('show version')
output = stdout.read().decode('utf-8')

match = re.search(r'Booting kernel.*', output)
assert match is not None

junos_version = re.search(r'Junos [\\d\\.]+ ', output).group()
assert 'Junos 17.4R1' in junos_version
    """,
    "run_command": "python test_bootup_message.py", 
    "expected_result": "No assertion errors"
  }
},

{
  "testname": "Test Interface Up",
  "testcase": {
    "testname": "Test Interface Up",
    "objective": "Verify all interfaces come up during bootup",
    "steps": [
      "Check interface status for ge-0/0/0", 
      "Interface ge-0/0/0 should be up"
    ]
  },
  "testscript": {
    "testname": "Test Interface Up",
    "objective": "Verify all interfaces come up during bootup",
    "file_name": "test_interface_up.py",
    "init_scripts": [
      "pip install junos-eznc"  
    ],
    "script": """
from jnpr.junos import Device  

dev = Device(host='192.168.1.1', user='admin', password='juniper123')
dev.open()

intf_obj = dev.rpc.get_interface_information(interface_name='ge-0/0/0')
intf_status = intf_obj.find('.//oper-status').text

assert intf_status == 'up'

dev.close()
    """,
    "run_command": "python test_interface_up.py",
    "expected_result": "No assertion errors"
  }
},

{
  "testname": "Test Routing Protocol Up",
  "testcase": {
    "testname": "Test Routing Protocol Up",
    "objective": "Verify OSPF protocol comes up properly", 
    "steps": [
      "Check OSPF neighbor status",
      "Verify OSPF neighbors are formed"  
    ]
  },
  "testscript": {
    "testname": "Test Routing Protocol Up",
    "objective": "Verify OSPF protocol comes up properly",
    "file_name": "test_routing_up.py",
    "init_scripts": [
      "pip install junos-eznc"
    ],
    "script": """  
from jnpr.junos import Device
dev = Device(host='192.168.1.1', user='admin', password='juniper123')
dev.open()

ospf_nbrs = dev.rpc.get_ospf_neighbor_information()
ospf_nbr_count = len(ospf_nbrs.findall('ospf-neighbor'))

assert ospf_nbr_count > 0

dev.close()
    """,
    "run_command": "python test_routing_up.py",
    "expected_result": "No assertion errors"
  }
},

{
  "testname": "Test Interface Errors",
  "testcase": {
    "testname": "Test Interface Errors",
    "objective": "Verify no interface errors during bootup",
    "steps": [
      "Check interface status for all interfaces",
      "Verify no interfaces have errors"
    ]
  },
  "testscript": {
    "testname": "Test Interface Errors",
    "objective": "Verify no interface errors during bootup",
    "file_name": "test_interface_errors.py", 
    "init_scripts": [
      "pip install junos-eznc"
    ],
    "script": """
from jnpr.junos import Device

dev = Device(host='192.168.1.1', user='admin', password='juniper123')
dev.open()

interfaces = dev.rpc.get_interface_information()
intfs_with_errors = interfaces.findall('.//interface[contains(admin-status, "Testing") or contains(oper-status, "Failed")]')

assert len(intfs_with_errors) == 0

dev.close()
    """,
    "run_command": "python test_interface_errors.py",
    "expected_result": "No assertion errors"
  }
},

{
  "testname": "Test CPU Utilization", 
  "testcase": {
    "testname": "Test CPU Utilization",
    "objective": "Verify CPU utilization is normal during bootup",
    "steps": [
      "Check CPU utilization after bootup completes", 
      "CPU utilization should be < 50%"  
    ]
  },
  "testscript": {
    "testname": "Test CPU Utilization",
    "objective": "Verify CPU utilization is normal during bootup",
    "file_name": "test_cpu_utilization.py",
    "init_scripts": [
      "pip install junos-eznc"
    ],
    "script": """
from jnpr.junos import Device
import time

dev = Device(host='192.168.1.1', user='admin', password='juniper123')
dev.open()

time.sleep(60) # Wait for system to fully boot

cpu_info = dev.rpc.get_route_engine_information()
cpu_util = int(cpu_info.findtext('route-engine/cpu-idle-pct'))

assert cpu_util > 50

dev.close()
    """,
    "run_command": "python test_cpu_utilization.py",
    "expected_result": "No assertion errors"
  }
}
]
###ENDLIST###