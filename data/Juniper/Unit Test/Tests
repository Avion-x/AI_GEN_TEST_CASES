###STARTLIST###
[
    {
        "testname": "Bootup Configuration Retrieval Test",
        "testcase": {
            "testname": "Bootup Configuration Retrieval Test",
            "objective": "Verify that the MX240 router retrieves the correct configuration during bootup.",
            "steps": [
                "Router starts bootup process",
                "Router retrieves configuration from the memory",
                "Configuration is applied correctly"
            ],
            "relevant_test_data": "Stored configuration"
        },
        "testscript": {
            "testname": "Bootup Configuration Retrieval Test",
            "objective": "To automate the bootup configuration retrieval test for Juniper MX240 device.",
            "file_name": "test_bootup_config_retrieval.py",
            "init_scripts": "pip install junos-eznc",
            "script": """
import jnpr.junos
from jnpr.junos import Device

def test_bootup_config_retrieval(device_ip):
    dev = Device(host=device_ip)
    dev.open()
    config = dev.rpc.get_config()
    dev.close()
    return config
            """,
            "run_command": "python test_bootup_config_retrieval.py",
            "expected_result": "Configurations retrieved and logged"
        }
    },
    {
        "testname": "Bootup Hardware Initialization Test",
        "testcase": {
            "testname": "Bootup Hardware Initialization Test",
            "objective": "Ensure all hardware components of MX240 are initialized correctly during the bootup.",
            "steps": [
                "Router starts bootup process",
                "All hardware components are initialized",
                "System logs are checked for any initialization errors"
            ],
            "relevant_test_data": "Hardware specifications"
        },
        "testscript": {
            "testname": "Bootup Hardware Initialization Test",
            "objective": "To ensure the proper initialization of hardware components on Juniper MX240 during bootup.",
            "file_name": "test_hardware_initialization.py",
            "init_scripts": "pip install paramiko",
            "script": """
import paramiko

def test_hardware_initialization(hostname, username, password):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(hostname, username=username, password=password)
    stdin, stdout, stderr = ssh.exec_command('show chassis hardware')
    output = stdout.read()
    ssh.close()
    return output
            """,
            "run_command": "python test_hardware_initialization.py",
            "expected_result": "Hardware initialized successfully"
        }
    },
    {
        "testname": "Bootup Firmware Verification Test",
        "testcase": {
            "testname": "Bootup Firmware Verification Test",
            "objective": "Confirm the firmware version and integrity during MX240 bootup.",
            "steps": [
                "Router boots up",
                "Firmware version is checked",
                "Checksums or integrity checks are performed"
            ],
            "relevant_test_data": "Expected firmware version and checksums"
        },
        "testscript": {
            "testname": "Bootup Firmware Verification Test",
            "objective": "To validate the firmware integrity and version during bootup of Juniper MX240.",
            "file_name": "test_firmware_verification.py",
            "init_scripts": "pip install pexpect",
            "script": """
import pexpect

def test_firmware_verification(ip_address):
    child = pexpect.spawn('ssh admin@' + ip_address)
    child.expect('Password:')
    child.sendline('your_password')
    child.expect('#')
    child.sendline('show version')
    result = child.before
    child.sendline('exit')
    child.close()
    return result
            """,
            "run_command": "python test_firmware_verification.py",
            "expected_result": "Firmware version verified successfully"
        }
    }
]
###ENDLIST###