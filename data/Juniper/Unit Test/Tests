 ###STARTLIST###
[
  {
    "testname": "Bootup Configuration Retrieval Test", 
    "testcase": {
      "testname": "Bootup Configuration Retrieval Test",
      "objective": "To verify the device is able to retrieve bootup configuration correctly",
      "steps": [
        "1. Power on the device",
        "2. Wait for device to complete bootup process",
        "3. Check if device retrieved the bootup configuration correctly by executing 'show configuration' command and verifying with expected configuration",
        "4. No errors should be seen in logs related to configuration retrieval"
      ],
      "test_data": {
        "expected_config": "<expected bootup configuration here>" 
      }
    },
    "testscript": {
      "testname": "Bootup Configuration Retrieval Test",
      "objective": "To verify the device is able to retrieve bootup configuration correctly",
      "file_name": "test_bootup_config_retrieval.py",
      "init_scripts": [
        "pip install paramiko",
        "pip install json"
      ],
      "script": """
        import paramiko
        import json
        
        ip = '<device_ip>'
        username = '<username>'
        password = '<password>'
        
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh_client.connect(hostname=ip,username=username,password=password)
        
        stdin, stdout, stderr = ssh_client.exec_command('show configuration')
        config = stdout.read().decode('utf-8')
        
        with open('expected_config.json') as f:
          expected_config = json.load(f)
        
        if config == expected_config:
          print("Test Passed")
        else:
          print("Test Failed. Config retrieval unsuccessful")
        
        ssh_client.close()
      """,
      "run_command": "python test_bootup_config_retrieval.py",
      "expected_result": "Test Passed"
    }
  },

  {
    "testname": "Bootup Hardware Initialization Test",
    "testcase": {
      "testname": "Bootup Hardware Initialization Test",
      "objective": "To verify hardware components initialize correctly during bootup",
      "steps": [
        "1. Power on the device", 
        "2. Check console logs and LED status for any hardware initialization errors",
        "3. Execute 'show chassis hardware' and verify all components show correct status",
        "4. No errors related to hardware initialization should be present in logs"
      ]
    },
    "testscript": {
      "testname": "Bootup Hardware Initialization Test",
      "objective": "To verify hardware components initialize correctly during bootup",
      "file_name": "test_bootup_hardware_init.py",
      "init_scripts": [
        "pip install paramiko"
      ],
      "script": """
        import re
        import paramiko
        
        ip = '<device_ip>'
        username = '<username>'
        password = '<password>'
        
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh_client.connect(hostname=ip,username=username,password=password)
        
        stdin, stdout, stderr = ssh_client.exec_command('show chassis hardware')
        output = stdout.read().decode('utf-8')
        
        errors = re.search(r'Error|Failed', output)
        
        if errors:
          print('Test Failed. Hardware initialization errors found')
        else:
          print('Test Passed. No hardware initialization errors')
          
        ssh_client.close()
      """,
      "run_command": "python test_bootup_hardware_init.py", 
      "expected_result": "Test Passed. No hardware initialization errors"
    }
  }
]
###ENDLIST###