 Here are 2 unit test cases with Python test scripts for Access Control Lists on Juniper MX480 devices:

###STARTLIST###
[
  {
    "testname": "Test ACL to block FTP traffic",
    "testcase": {
      "testname": "Test ACL to block FTP traffic", 
      "objective": "Validate that the ACL blocks all FTP traffic to the device",
      "steps": [
        "Configure an ACL to block TCP port 21", 
        "Verify FTP traffic is blocked"
      ],
      "test_data": {
        "acl_name": "BLOCK_FTP", 
        "blocked_ip": "1.1.1.1", 
        "blocked_port": 21
      }
    },
    "testscript": {
      "testname": "Test ACL to block FTP traffic",
      "objective": "Validate that the ACL blocks all FTP traffic to the device",
      "file_name": "test_acl_block_ftp.py",
      "init_scripts": [
        "pip install paramiko"  
      ],
      "script": """
        import unittest
        from device_manager import DeviceManager
        
        device = DeviceManager("1.1.1.1", "admin", "password123")
        
        device.configure_acl("BLOCK_FTP", "deny tcp host 1.1.1.1 eq 21")
        
        result = device.verify_acl_block("1.1.1.1", 21)
        
        assert result == True
      """,
      "run_command": "python test_acl_block_ftp.py",
      "expected_result": "OK"
    }
  },
  {
    "testname": "Test ACL logging", 
    "testcase": {
      "testname": "Test ACL logging",
      "objective": "Validate ACL logging is working correctly",
      "steps": [  
        "Configure ACL to log denied HTTP traffic",
        "Generate HTTP traffic that matches ACL",
        "Verify logs show denied HTTP traffic"
      ],
      "test_data": { 
        "acl_name": "LOG_HTTP",
        "log_server": "1.1.1.2",
        "blocked_ip": "2.2.2.2"
      }
    },
    "testscript": {
      "testname": "Test ACL logging",   
      "objective": "Validate ACL logging is working correctly",
      "file_name": "test_acl_logging.py",
      "init_scripts": [
        "pip install paramiko"
      ],
      "script": """  
        import unittest
        from device_manager import DeviceManager
        
        device = DeviceManager("1.1.1.1", "admin", "password123")
        
        device.configure_acl("LOG_HTTP", "deny tcp host 2.2.2.2 eq 80 log")
        device.configure_log_server("1.1.1.2")
        
        device.generate_test_traffic(src_ip="2.2.2.2", dest_ip="1.1.1.1", port=80)
        
        result = device.verify_acl_logs("2.2.2.2", 80)
        
        assert result == True
      """,
      "run_command": "python test_acl_logging.py", 
      "expected_result": "OK"
    }
  } 
]
###ENDLIST###