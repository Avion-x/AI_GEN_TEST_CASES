 Here are 2 unit test cases for bootup process of the Juniper Networks MX Series MX480 router along with sample Python test code:

**Test Case 1 - Verify bootup completes successfully**

Steps:

1. Power on the router
2. Verify the system boots up completely and the CLI prompt is displayed

```python
import unittest
from netmiko import ConnectHandler

class TestRouterBootup(unittest.TestCase):

    def test_bootup_completes(self):
        device = {
            'device_type': 'juniper',
            'host': '192.168.1.1', 
            'username': 'netconf',
            'password': 'password'
        }
        
        net_connect = ConnectHandler(**device)
        output = net_connect.send_command('')
        
        self.assertIn('>', output)

if __name__ == '__main__':
    unittest.main()
```

This test connects to the router after bootup and verifies the CLI prompt is seen to indicate successful bootup.

**Test Case 2 - Verify bootup time is within threshold** 

Steps:

1. Power on the router
2. Note start time of bootup
3. Verify bootup completes and CLI prompt is seen
4. Note end time of bootup
5. Verify bootup time is less than 300 seconds

```python
import unittest
from datetime import datetime

class TestRouterBootupTime(unittest.TestCase):

    def test_bootup_time(self):
        start_time = datetime.now()
        
        # router bootup steps
        
        end_time = datetime.now()
        bootup_time = (end_time - start_time).total_seconds()
        
        self.assertLess(bootup_time, 300) 

if __name__ == '__main__':
    unittest.main()
```

This test verifies the router bootup time is less than a threshold of 300 seconds. The start and end time are noted to calculate total bootup duration.