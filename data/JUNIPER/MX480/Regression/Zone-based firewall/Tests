 Here are 2 Regression Test Cases and python test scripts for Zone-based firewall cases for the Network MSeries Router MX480:

###STARTLIST###
[
{
  "testname": "Test creating firewall zone",
  "testcase": {
    "testname": "Create firewall zone test",  
    "objective": "Validate creating new firewall zone",
    "steps": [
      "Send REST API call to create new zone",
      "Verify zone got created with correct name"
    ],
    "testdata": {
      "zonename": "TestZone1", 
      "interfaces": ["ge-0/0/1"]
    }
  },
  
  "testscript": {
    "testname": "Create firewall zone test",
    "objective": "Validate creating new firewall zone",  
    "file_name": "test_create_fw_zone.py",
    "init_scripts": [
      "pip install requests",
      "pip install json"
    ],
    "script": """
import requests
import json

zonename = "TestZone1"
interfaces = ["ge-0/0/1"]

api_url = "https://router/api/zones"
headers = {"Content-Type": "application/json"}
data = {"name": zonename, "interfaces": interfaces}

resp = requests.post(api_url, headers=headers, json=data)

if resp.status_code == 201:
  print("SUCCESS: Zone created")  
else: 
  print(f"FAILED: Creating zone {zonename}")
    """,
    "run_command": "python test_create_fw_zone.py", 
    "expected_result": "SUCCESS: Zone created"
  }
},

{
  "testname": "Test updating firewall policy", 
  "testcase": {
    "testname": "Update firewall policy test",
    "objective": "Validate updating firewall policy with new rule",
    "steps": [ 
      "Send REST API call to update policy with new rule",
      "Verify policy got updated with new rule" 
    ],
    "testdata": {
      "policyname": "TestPolicy",
      "newrule": {
        "name": "AllowHTTP",
        "match": {
          "source-address": ["any"], 
          "destination-address": ["any"],
          "application": ["junos-http"]  
        },
        "then": {
          "permit": True 
        }    
      }  
    }
  },

  "testscript": {
    "testname": "Update firewall policy test",
    "objective": "Validate updating firewall policy with new rule", 
    "file_name": "test_update_fw_policy.py",
    "init_scripts": [
      "pip install requests",
      "pip install json"
    ],
    "script": """  
import requests
import json

policyname = "TestPolicy"  
newrule = {
  "name": "AllowHTTP",
  "match": {
    "source-address": ["any"],
    "destination-address": ["any"], 
    "application": ["junos-http"]
  },
  "then": {
    "permit": True 
  }  
}

api_url = f"https://router/api/policies/{policyname}"
headers = {"Content-Type": "application/json"}  

resp = requests.post(api_url, headers=headers, json=newrule)  

if resp.status_code == 204:
  print("SUCCESS: Policy updated with new rule") 
else:
  print(f"FAILED: Updating policy {policyname}")
    """,
    "run_command": "python test_update_fw_policy.py",
    "expected_result": "SUCCESS: Policy updated with new rule" 
  }
}
]
###ENDLIST###

The above contains 2 test cases along with their python test scripts for zone-based firewall validation for the MX480 router. The test cases validate creating a new firewall zone and updating an existing firewall policy. The corresponding python scripts use REST API calls to test these scenarios. Each test case and script is encapsulated within its own JSON object inside a python list.