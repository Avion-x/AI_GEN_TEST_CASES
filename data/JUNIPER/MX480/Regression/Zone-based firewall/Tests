 Here are 2 Regression Test Cases and python test scripts for Zone-based firewall cases for the Network MSeries Router MX480:

###STARTLIST###
[
{
    "testname": "Test Inter-Zone Traffic", 
    "testcase": {
        "testname": "Test Inter-Zone Traffic",
        "objective": "Validate inter-zone traffic between zones is blocked when default policy is deny",
        "steps": [
            "1. Configure zone A and zone B on MX480", 
            "2. Configure default zone policy to Deny",
            "3. Generate traffic from zone A to zone B",
            "4. Verify traffic is blocked between zones"
        ],
        "test_data": {
            "zoneA_network": "192.168.1.0/24",
            "zoneB_network": "192.168.2.0/24" 
        }
    },
    "testscript": {
        "testname": "Test Inter-Zone Traffic",
        "objective": "Validate inter-zone traffic between zones is blocked when default policy is deny", 
        "file_name": "test_inter_zone_traffic.py",
        "init_scripts": "pip install paramiko netmiko",
        "script": """
            import paramiko
            import netmiko
            
            ZONEA_NETWORK = \"\"\"192.168.1.0/24\"\"\"
            ZONEB_NETWORK = \"\"\"192.168.2.0/24\"\"\"
            
            ssh_client = paramiko.SSHClient()
            router = {
                "device_type": "juniper",
                "host":   "192.168.0.1",
                "username": "netadmin",
                "password": "Juniper123"
            }
            
            ssh_client.connect(**router)
            connection = netmiko.ConnectHandler(**router)
            
            connection.send_config_set([
                "set security zones security-zone ZONE_A interfaces ge-0/0/0.0 host-inbound-traffic system-services ping",
                "set security zones security-zone ZONE_B interfaces ge-0/0/1.0 host-inbound-traffic system-services ping",
                "set security policies default-policy deny-all" 
            ])
            
            print("Configured Zones and Default Deny Policy")
            
            connection.send_command("ping "+ZONEB_NETWORK+" source "+ZONEA_NETWORK)
            
            print("Attempted ping from Zone A to Zone B")
            
            ping_output = connection.send_command_expect("ping "+ZONEB_NETWORK+" source "+ ZONEA_NETWORK, expect_string="#")
            if "100% packet loss" in ping_output:
                print("Ping Failed from Zone A to Zone B - Test Passed")
            else:
                print("Ping Successful from Zone A to Zone B - Test Failed")
                
        """,
        "run_command": "python test_inter_zone_traffic.py", 
        "expected_result": "Ping Failed from Zone A to Zone B - Test Passed"
    }
},
{
    "testname": "Test Zone Security Policy",
    "testcase": {
        "testname": "Test Zone Security Policy",
        "objective": "Validate traffic flows when zone security policy is configured to permit between zones ",
        "steps": [
            "1. Configure zone A and zone B on MX480",
            "2. Configure zone security policy to permit traffic from zone A to zone B ",
            "3. Generate traffic from zone A to zone B", 
            "4. Verify traffic flows between zones"
        ],
        "test_data": {
            "zoneA_network": "192.168.1.0/24",
            "zoneB_network": "192.168.2.0/24"
        }
    },
    "testscript": {    
        "testname": "Test Zone Security Policy",
        "objective": "Validate traffic flows when zone security policy is configured to permit between zones",
        "file_name": "test_zone_security_policy.py",
        "init_scripts": "pip install paramiko netmiko", 
        "script": """
            import paramiko
            import netmiko
            
            ZONEA_NETWORK = \"\"\"192.168.1.0/24\"\"\"
            ZONEB_NETWORK = \"\"\"192.168.2.0/24\"\"\"
            
            ssh_client = paramiko.SSHClient()
            router = {
                "device_type": "juniper",
                "host":   "192.168.0.1",
                "username": "netadmin",
                "password": "Juniper123"
            }
            
            ssh_client.connect(**router)
            connection = netmiko.ConnectHandler(**router)
            
            connection.send_config_set([
                "set security zones security-zone ZONE_A interfaces ge-0/0/0.0 host-inbound-traffic system-services ping",
                "set security zones security-zone ZONE_B interfaces ge-0/0/1.0 host-inbound-traffic system-services ping",
                "set security policies from-zone ZONE_A to-zone ZONE_B policy ZONE_POLICY match source-address any destination-address any application any",
                "set security policies from-zone ZONE_A to-zone ZONE_B policy ZONE_POLICY then permit"
            ])   
            
            print("Configured Zones and Security Policy to Permit")
            
            connection.send_command("ping "+ZONEB_NETWORK+" source "+ZONEA_NETWORK)
            
            print("Attempted ping from Zone A to Zone B")   
            
            ping_output = connection.send_command_expect("ping "+ZONEB_NETWORK+" source "+ ZONEA_NETWORK)
            if "!!!" in ping_output:
                print("Ping Successful from Zone A to Zone B - Test Passed")
            else:
                print("Ping Failed from Zone A to Zone B - Test Failed")
                
        """,
        "run_command": "python test_zone_security_policy.py",
        "expected_result": "Ping Successful from Zone A to Zone B - Test Passed"
    }
} 
]
###ENDLIST###